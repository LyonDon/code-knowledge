工厂模式主要是面向封装产生的

工厂方法用来处理对象的创建，这样对象的创建都是在子类之中自行完成的。从而使超类的代码和子类的对象创建解耦合了

abstract Product factoryMethod（String type）
//工厂方法必须是抽象的
//工厂方法必须返回一个产品，即其所在类定义的对象
//工厂方法将客户和实际创建具体产品的代码分割开来
//工厂方法可能需要参数（也可能不需要）用来指定产品的类型

所有工厂模式都用来封装对象的创建。工厂方法模式通过让子类决定该创建的对象是什么，来达到将对象创建的过程封装的目的

工厂方法模式定义了一个创建对象的接口，但由子类决定要实例化的类时哪一个。工厂方法让类把实例化推迟到子类，通过子类创建对象。客户只需要知道他们所使用的抽象类型就行了，由子类负责决定具体类型。